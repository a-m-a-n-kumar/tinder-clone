{"version":3,"sources":["Header.js","axios.js","Card.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","Card","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA4BeA,MAvBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACA,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAIvC,qBACGA,UAAU,eACVG,IAAI,4FACJC,IAAI,KAGP,cAACH,EAAA,EAAD,UACA,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECd/BK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,6CCoDEC,MAlDf,WAEI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,gBADhC,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAYC,qBAAKlB,UAAU,cAAf,SAEI,qBAAKA,UAAU,6BAAf,SACCW,EAAOQ,KAAI,SAAAC,GAAM,OACd,cAAC,IAAD,CACApB,UAAU,QAEVqB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAmBH,EAAOI,MACpCC,iBAAkB,WAAiBL,EAAOI,MAL1C,SAOI,qBAAKE,MAAO,CAAEC,gBAAgB,OAAD,OAASP,EAAOQ,OAAhB,MAC7B5B,UAAU,OADV,SAEA,6BAAKoB,EAAOI,UAPXJ,EAAOI,c,6FCKbK,MA/Bf,WACI,OACI,sBAAK7B,UAAU,eAAf,UAEA,cAACC,EAAA,EAAD,CAAaD,UAAU,uBAAvB,SACA,cAAC,IAAD,CAAYE,SAAS,YAIrB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACA,cAAC,IAAD,CAAWE,SAAS,YAGpB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACA,cAAC,IAAD,CAAcE,SAAS,YAGvB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACA,cAAC,IAAD,CAAcE,SAAS,YAGvB,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACA,cAAC,IAAD,CAAaE,SAAS,gBCbf4B,MAZf,WACE,OACE,sBAAK9B,UAAU,MAAf,UAEA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCAW+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.544d85b5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n        <IconButton>\r\n        <PersonIcon fontSize=\"large\" className=\"header__icon\"  />\r\n      \r\n        </IconButton>\r\n        \r\n        <img\r\n           className=\"header__logo\"\r\n           src=\"https://cdn.designrush.com/uploads/inspirations/2354/crop_683_410__1513706350_604_tin.png\"\r\n           alt=\"\"\r\n         />\r\n\r\n        <IconButton>\r\n        <ForumIcon fontSize=\"large\" className=\"header__icon\" />\r\n        </IconButton>\r\n\r\n      \r\n             </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://tinder-back-clone.herokuapp.com/'\r\n})\r\n\r\nexport default instance;","import React, {useState, useEffect} from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './TinderCards.css';\r\nimport axios from './axios'\r\n\r\nfunction Card() {\r\n\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n      async function fetchData(){\r\n          const req = await axios.get('/tinder/card');\r\n\r\n          setPeople(req.data);\r\n      }\r\n\r\n      fetchData();\r\n    }, [])\r\n\r\nconst swiped = (direction, nameToDelete) => {\r\n    // setLastDierction(direction);\r\n}\r\n\r\nconst outOfFrame = (name) => {\r\n\r\n};\r\n\r\n  \r\n    return (\r\n        <div className='tinderCards'>\r\n\r\n            <div className=\"tinderCards__cardContainer\">\r\n            {people.map(person=> (\r\n                <TinderCard\r\n                className=\"swipe\"\r\n                key={person.name}\r\n                preventSwipe={[\"up\", \"down\"]}\r\n                onSwipe={(dir)=> swiped(dir, person.name)}\r\n                onCardLeftScreen={() => outOfFrame(person.name)}\r\n                >\r\n                    <div style={{ backgroundImage: `url(${person.imgUrl})` } }\r\n                    className=\"card\">\r\n                    <h3>{person.name}</h3>\r\n                    </div>\r\n                </TinderCard>\r\n                \r\n            ))}\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './SwipeButtons.css';\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n        \r\n        <IconButton  className=\"swipeButtons__repeat\" >\r\n        <ReplayIcon fontSize=\"large\"   />\r\n      \r\n        </IconButton>\r\n\r\n        <IconButton className=\"swipeButtons__left\" >\r\n        <CloseIcon fontSize=\"large\"   />\r\n      \r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons__star\" >\r\n        <StarRateIcon fontSize=\"large\"   />\r\n      \r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons__right\" >\r\n        <FavoriteIcon fontSize=\"large\"   />\r\n      \r\n        </IconButton>\r\n        <IconButton className=\"swipeButtons__lightning\" >\r\n        <FlashOnIcon fontSize=\"large\"   />\r\n      \r\n        </IconButton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","\nimport './App.css';\nimport Header from './Header';\nimport Card from './Card';\nimport SwipeButtons from './SwipeButtons.js';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n    <Header /> \n    <Card />\n    <SwipeButtons />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}